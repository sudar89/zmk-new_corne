#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE  &kp Q       &kp W       &kp E        &kp R        &kp T                               &kp UP                &kp Y        &kp U        &kp I        &kp O       &kp P          &kp BSPC
&kp TAB     &mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F  &kp G                     &kp LEFT  &kp ENTER  &kp RIGHT  &kp H        &mt LSHFT J  &mt LCTRL K  &mt LALT L  &mt LGUI SEMI  &kp SQT
&kp LSHFT   &kp Z       &kp X       &kp C        &kp V        &kp B        &kp SPACE              &kp DOWN              &kp N        &kp M        &kp COMMA    &kp DOT     &kp FSLH       &kp RSHFT
                                    &lt 3 ESC    &lt 2 SPACE  &lt 1 SPACE                                               &lt 1 ENTER  &mo 2        &lt 3 DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&bt BT_NXT    &kp LEFT_BRACKET   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0                                &mmv MOVE_UP                     &kp PAGE_UP    &kp PAGE_UP     &kp UP_ARROW  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp BSPC
&bt BT_PRV    &kp RIGHT_BRACKET  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp HOME       &kp LEFT_ARROW  &kp DOWN      &kp RIGHT         &kp END            &kp PG_UP
&bt BT_SEL 0  &kp BACKSLASH      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp EQUAL     &kp C_MUTE                    &mmv MOVE_DOWN                   &kp PAGE_DOWN  &kp PAGE_DOWN   &kp C_VOL_DN  &kp C_VOL_DN      &kp K_MUTE         &kp PG_DN
                                               &kp NUMBER_0  &kp DOT       &trans                                                                       &kp INS        &kp DEL         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            display-name = "symbol";
            bindings = <
&bt BT_NXT  &kp LS(LEFT_BRACKET)   &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)                                &mmv MOVE_UP                     &kp PAGE_UP    &kp PAGE_UP     &kp UP_ARROW  &kp LS(LEFT_BRACKET)  &kp LS(RIGHT_BRACKET)  &kp BSPC
&bt BT_PRV  &kp LS(RIGHT_BRACKET)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)  &kp LS(NUMBER_6)  &kp LS(MINUS)                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp HOME       &kp LEFT_ARROW  &kp DOWN      &kp RIGHT             &kp END                &kp PG_UP
&bt BT_CLR  &kp LS(BACKSLASH)      &kp LS(NUMBER_1)  &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(EQUAL)     &kp C_MUTE                    &mmv MOVE_DOWN                   &kp PAGE_DOWN  &kp PAGE_DOWN   &kp C_VOL_DN  &kp C_VOL_DN          &kp K_MUTE             &kp PG_DN
                                                     &kp NUMBER_0      &kp DOT           &trans                                                                           &kp INS        &kp DEL         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "mouse";
            bindings = <
&trans  &kp F9  &kp F10  &kp F11  &kp F12  &kp PRCNT                            &mmv MOVE_UP                     &mkp MB4   &mkp MB4        &mmv MOVE_UP     &kp LPAR         &kp RPAR        &kp BSPC
&trans  &kp F5  &kp F6   &kp F7   &kp F8   &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &mkp MB4   &mmv MOVE_LEFT  &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &msc SCRL_DOWN  &kp GRAVE
&trans  &kp F1  &kp F2   &kp F3   &kp F4   &mkp MB5   &kp F5                    &mmv MOVE_DOWN                   &mkp MB5   &mkp MB5        &msc SCRL_RIGHT  &msc SCRL_LEFT   &msc SCRL_UP    &kp TILDE
                         &trans   &trans   &kp SPACE                                                             &mkp LCLK  &mkp RCLK       &mkp MB3
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&trans          &trans      &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&trans          &sys_reset  &trans     &bootloader  &trans     &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans       &trans     &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &trans       &trans     &trans                                                                   &trans       &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
